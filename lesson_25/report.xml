<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="8" failures="1" skipped="1" tests="11" time="214.712" timestamp="2024-06-06T09:55:01.126225" hostname="acernb001"><testcase classname="lesson_25.tests.test_dashboard" name="test_dashboard_data[chromium]" time="1.180"><failure message="AssertionError: assert '11' == '16'&#10;  &#10;  - 16&#10;  + 11">desktop_app_auth = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;

    def test_dashboard_data(desktop_app_auth):
        payload = json.dumps({"total": 0, "passed": 0, "failed": 0, "norun": 0})
        print(payload)
        desktop_app_auth.intercept_requests('**/getstat*', payload)
        desktop_app_auth.refresh_dashboard()
&gt;       assert desktop_app_auth.get_total_tests_stats() == '16'
E       AssertionError: assert '11' == '16'
E         
E         - 16
E         + 11

tests/test_dashboard.py:9: AssertionError</failure></testcase><testcase classname="lesson_25.tests.test_dashboard" name="test_dashboard_data[chromium]" time="0.002"><error message="failed on teardown with &quot;AttributeError: 'Function' object has no attribute 'funcards'. Did you mean: 'funcargs'?&quot;">self = &lt;allure_commons._allure.fixture object at 0x7806ee741810&gt;, args = (), kwargs = {}

    def __call__(self, *args, **kwargs):
        self.parameters = func_parameters(self._fixture_function, *args, **kwargs)
    
        with self:
&gt;           return self._fixture_function(*args, **kwargs)

../.venv/lib/python3.10/site-packages/allure_commons/_allure.py:221: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

request = &lt;SubRequest 'make_screenshots' for &lt;Function test_dashboard_data[chromium]&gt;&gt;

    @fixture(scope='function', autouse=True)
    def make_screenshots(request):
        yield
        if request.node.result_call.failed:
&gt;           for arg in request.node.funcards.values():
E           AttributeError: 'Function' object has no attribute 'funcards'. Did you mean: 'funcargs'?

conftest.py:141: AttributeError</error></testcase><testcase classname="lesson_25.tests.test_demo" name="test_wait_more_30_sec[chromium]" time="30.214"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">desktop_app = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;, request = &lt;SubRequest 'desktop_app_auth' for &lt;Function test_wait_more_30_sec[chromium]&gt;&gt;

    @fixture(scope='class')
    def desktop_app_auth(desktop_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = desktop_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806ee75e680&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_demo" name="test_ajax[chromium]" time="30.263"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">desktop_app = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;, request = &lt;SubRequest 'desktop_app_auth' for &lt;Function test_ajax[chromium]&gt;&gt;

    @fixture(scope='class')
    def desktop_app_auth(desktop_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = desktop_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806edaf9a20&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_demo" name="test_handlers[chromium]" time="30.267"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">desktop_app = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;, request = &lt;SubRequest 'desktop_app_auth' for &lt;Function test_handlers[chromium]&gt;&gt;

    @fixture(scope='class')
    def desktop_app_auth(desktop_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = desktop_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806edafa830&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_location" name="test_location_ok[iPhone 11-chromium]" time="0.728" /><testcase classname="lesson_25.tests.test_mobile" name="test_column_hidden[iPhone 11-chromium]" time="30.078"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">mobile_app = &lt;lesson_25.page_object.application.App object at 0x7806edb804f0&gt;, request = &lt;SubRequest 'mobile_app_auth' for &lt;Function test_column_hidden[iPhone 11-chromium]&gt;&gt;

    @fixture(scope='class')
    def mobile_app_auth(mobile_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = mobile_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806ed8e6710&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_location" name="test_location_ok[Pixel 2-chromium]" time="0.793" /><testcase classname="lesson_25.tests.test_mobile" name="test_column_hidden[Pixel 2-chromium]" time="30.077"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">mobile_app = &lt;lesson_25.page_object.application.App object at 0x7806edb4ee30&gt;, request = &lt;SubRequest 'mobile_app_auth' for &lt;Function test_column_hidden[Pixel 2-chromium]&gt;&gt;

    @fixture(scope='class')
    def mobile_app_auth(mobile_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = mobile_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806edafbf40&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_testcases" name="test_new_testcase_with_page_object[chromium-first data]" time="30.261"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">desktop_app = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;, request = &lt;SubRequest 'desktop_app_auth' for &lt;Function test_new_testcase_with_page_object[chromium-first data]&gt;&gt;

    @fixture(scope='class')
    def desktop_app_auth(desktop_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = desktop_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806ed9d4e50&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_testcases" name="test_testcase_does_not_exist[chromium]" time="30.257"><error message="failed on setup with &quot;playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.&#10;Call log:&#10;waiting for locator(&quot;input[name='username']&quot;)&quot;">desktop_app = &lt;lesson_25.page_object.application.App object at 0x7806ee740e80&gt;, request = &lt;SubRequest 'desktop_app_auth' for &lt;Function test_testcase_does_not_exist[chromium]&gt;&gt;

    @fixture(scope='class')
    def desktop_app_auth(desktop_app, request):
        secure = request.config.getoption("--secure")
        config = load_config(secure)
        app = desktop_app
        app.goto('/login')
&gt;       app.login(**config)

conftest.py:80: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
page_object/application.py:44: in login
    self.page.fill("input[name='username']", login)
../.venv/lib/python3.10/site-packages/playwright/sync_api/_generated.py:9735: in fill
    self._sync(
../.venv/lib/python3.10/site-packages/playwright/_impl/_page.py:811: in fill
    return await self._main_frame.fill(**locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_frame.py:527: in fill
    await self._channel.send("fill", locals_to_params(locals()))
../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:59: in send
    return await self._connection.wrap_api_call(
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = &lt;playwright._impl._connection.Connection object at 0x7806ee706e30&gt;, cb = &lt;function Channel.send.&lt;locals&gt;.&lt;lambda&gt; at 0x7806ed8e68c0&gt;, is_internal = False

    async def wrap_api_call(
        self, cb: Callable[[], Any], is_internal: bool = False
    ) -&gt; Any:
        if self._api_zone.get():
            return await cb()
        task = asyncio.current_task(self._loop)
        st: List[inspect.FrameInfo] = getattr(task, "__pw_stack__", inspect.stack())
        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)
        self._api_zone.set(parsed_st)
        try:
            return await cb()
        except Exception as error:
&gt;           raise rewrite_error(error, f"{parsed_st['apiName']}: {error}") from None
E           playwright._impl._errors.TimeoutError: Page.fill: Timeout 30000ms exceeded.
E           Call log:
E           waiting for locator("input[name='username']")

../.venv/lib/python3.10/site-packages/playwright/_impl/_connection.py:514: TimeoutError</error></testcase><testcase classname="lesson_25.tests.test_testcases" name="test_delete_test_case[chromium]" time="0.067"><skipped type="pytest.skip" message="do not work create test by api">/home/oleg/PycharmProjects/playwright/lesson_25/tests/test_testcases.py:25: do not work create test by api</skipped></testcase></testsuite></testsuites>